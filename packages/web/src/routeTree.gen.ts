/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as OrgOrgSlugRouteRouteImport } from './routes/org.$orgSlug/route'
import { Route as OrgOrgSlugIndexRouteImport } from './routes/org.$orgSlug/index'
import { Route as OrgOrgSlugUsersRouteImport } from './routes/org.$orgSlug/users'
import { Route as OrgOrgSlugTransactionsRouteImport } from './routes/org.$orgSlug/transactions'
import { Route as OrgOrgSlugProductsRouteImport } from './routes/org.$orgSlug/products'
import { Route as OrgOrgSlugExpensesRouteImport } from './routes/org.$orgSlug/expenses'
import { Route as OrgOrgSlugCustomersRouteImport } from './routes/org.$orgSlug/customers'
import { Route as OrgOrgSlugInvoicesRouteRouteImport } from './routes/org.$orgSlug/invoices/route'
import { Route as OrgOrgSlugInvoicesIndexRouteImport } from './routes/org.$orgSlug/invoices/index'
import { Route as OrgOrgSlugInvoicesSalesRouteImport } from './routes/org.$orgSlug/invoices/sales'
import { Route as OrgOrgSlugInvoicesPurchasesRouteImport } from './routes/org.$orgSlug/invoices/purchases'
import { Route as OrgOrgSlugInvoicesCreateSaleRouteImport } from './routes/org.$orgSlug/invoices/createSale'
import { Route as OrgOrgSlugInvoicesCreatePurchaseRouteImport } from './routes/org.$orgSlug/invoices/createPurchase'

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const OrgOrgSlugRouteRoute = OrgOrgSlugRouteRouteImport.update({
  id: '/org/$orgSlug',
  path: '/org/$orgSlug',
  getParentRoute: () => rootRouteImport,
} as any)
const OrgOrgSlugIndexRoute = OrgOrgSlugIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => OrgOrgSlugRouteRoute,
} as any)
const OrgOrgSlugUsersRoute = OrgOrgSlugUsersRouteImport.update({
  id: '/users',
  path: '/users',
  getParentRoute: () => OrgOrgSlugRouteRoute,
} as any)
const OrgOrgSlugTransactionsRoute = OrgOrgSlugTransactionsRouteImport.update({
  id: '/transactions',
  path: '/transactions',
  getParentRoute: () => OrgOrgSlugRouteRoute,
} as any)
const OrgOrgSlugProductsRoute = OrgOrgSlugProductsRouteImport.update({
  id: '/products',
  path: '/products',
  getParentRoute: () => OrgOrgSlugRouteRoute,
} as any)
const OrgOrgSlugExpensesRoute = OrgOrgSlugExpensesRouteImport.update({
  id: '/expenses',
  path: '/expenses',
  getParentRoute: () => OrgOrgSlugRouteRoute,
} as any)
const OrgOrgSlugCustomersRoute = OrgOrgSlugCustomersRouteImport.update({
  id: '/customers',
  path: '/customers',
  getParentRoute: () => OrgOrgSlugRouteRoute,
} as any)
const OrgOrgSlugInvoicesRouteRoute = OrgOrgSlugInvoicesRouteRouteImport.update({
  id: '/invoices',
  path: '/invoices',
  getParentRoute: () => OrgOrgSlugRouteRoute,
} as any)
const OrgOrgSlugInvoicesIndexRoute = OrgOrgSlugInvoicesIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => OrgOrgSlugInvoicesRouteRoute,
} as any)
const OrgOrgSlugInvoicesSalesRoute = OrgOrgSlugInvoicesSalesRouteImport.update({
  id: '/sales',
  path: '/sales',
  getParentRoute: () => OrgOrgSlugInvoicesRouteRoute,
} as any)
const OrgOrgSlugInvoicesPurchasesRoute =
  OrgOrgSlugInvoicesPurchasesRouteImport.update({
    id: '/purchases',
    path: '/purchases',
    getParentRoute: () => OrgOrgSlugInvoicesRouteRoute,
  } as any)
const OrgOrgSlugInvoicesCreateSaleRoute =
  OrgOrgSlugInvoicesCreateSaleRouteImport.update({
    id: '/createSale',
    path: '/createSale',
    getParentRoute: () => OrgOrgSlugInvoicesRouteRoute,
  } as any)
const OrgOrgSlugInvoicesCreatePurchaseRoute =
  OrgOrgSlugInvoicesCreatePurchaseRouteImport.update({
    id: '/createPurchase',
    path: '/createPurchase',
    getParentRoute: () => OrgOrgSlugInvoicesRouteRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/org/$orgSlug': typeof OrgOrgSlugRouteRouteWithChildren
  '/org/$orgSlug/invoices': typeof OrgOrgSlugInvoicesRouteRouteWithChildren
  '/org/$orgSlug/customers': typeof OrgOrgSlugCustomersRoute
  '/org/$orgSlug/expenses': typeof OrgOrgSlugExpensesRoute
  '/org/$orgSlug/products': typeof OrgOrgSlugProductsRoute
  '/org/$orgSlug/transactions': typeof OrgOrgSlugTransactionsRoute
  '/org/$orgSlug/users': typeof OrgOrgSlugUsersRoute
  '/org/$orgSlug/': typeof OrgOrgSlugIndexRoute
  '/org/$orgSlug/invoices/createPurchase': typeof OrgOrgSlugInvoicesCreatePurchaseRoute
  '/org/$orgSlug/invoices/createSale': typeof OrgOrgSlugInvoicesCreateSaleRoute
  '/org/$orgSlug/invoices/purchases': typeof OrgOrgSlugInvoicesPurchasesRoute
  '/org/$orgSlug/invoices/sales': typeof OrgOrgSlugInvoicesSalesRoute
  '/org/$orgSlug/invoices/': typeof OrgOrgSlugInvoicesIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/org/$orgSlug/customers': typeof OrgOrgSlugCustomersRoute
  '/org/$orgSlug/expenses': typeof OrgOrgSlugExpensesRoute
  '/org/$orgSlug/products': typeof OrgOrgSlugProductsRoute
  '/org/$orgSlug/transactions': typeof OrgOrgSlugTransactionsRoute
  '/org/$orgSlug/users': typeof OrgOrgSlugUsersRoute
  '/org/$orgSlug': typeof OrgOrgSlugIndexRoute
  '/org/$orgSlug/invoices/createPurchase': typeof OrgOrgSlugInvoicesCreatePurchaseRoute
  '/org/$orgSlug/invoices/createSale': typeof OrgOrgSlugInvoicesCreateSaleRoute
  '/org/$orgSlug/invoices/purchases': typeof OrgOrgSlugInvoicesPurchasesRoute
  '/org/$orgSlug/invoices/sales': typeof OrgOrgSlugInvoicesSalesRoute
  '/org/$orgSlug/invoices': typeof OrgOrgSlugInvoicesIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/org/$orgSlug': typeof OrgOrgSlugRouteRouteWithChildren
  '/org/$orgSlug/invoices': typeof OrgOrgSlugInvoicesRouteRouteWithChildren
  '/org/$orgSlug/customers': typeof OrgOrgSlugCustomersRoute
  '/org/$orgSlug/expenses': typeof OrgOrgSlugExpensesRoute
  '/org/$orgSlug/products': typeof OrgOrgSlugProductsRoute
  '/org/$orgSlug/transactions': typeof OrgOrgSlugTransactionsRoute
  '/org/$orgSlug/users': typeof OrgOrgSlugUsersRoute
  '/org/$orgSlug/': typeof OrgOrgSlugIndexRoute
  '/org/$orgSlug/invoices/createPurchase': typeof OrgOrgSlugInvoicesCreatePurchaseRoute
  '/org/$orgSlug/invoices/createSale': typeof OrgOrgSlugInvoicesCreateSaleRoute
  '/org/$orgSlug/invoices/purchases': typeof OrgOrgSlugInvoicesPurchasesRoute
  '/org/$orgSlug/invoices/sales': typeof OrgOrgSlugInvoicesSalesRoute
  '/org/$orgSlug/invoices/': typeof OrgOrgSlugInvoicesIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/org/$orgSlug'
    | '/org/$orgSlug/invoices'
    | '/org/$orgSlug/customers'
    | '/org/$orgSlug/expenses'
    | '/org/$orgSlug/products'
    | '/org/$orgSlug/transactions'
    | '/org/$orgSlug/users'
    | '/org/$orgSlug/'
    | '/org/$orgSlug/invoices/createPurchase'
    | '/org/$orgSlug/invoices/createSale'
    | '/org/$orgSlug/invoices/purchases'
    | '/org/$orgSlug/invoices/sales'
    | '/org/$orgSlug/invoices/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/org/$orgSlug/customers'
    | '/org/$orgSlug/expenses'
    | '/org/$orgSlug/products'
    | '/org/$orgSlug/transactions'
    | '/org/$orgSlug/users'
    | '/org/$orgSlug'
    | '/org/$orgSlug/invoices/createPurchase'
    | '/org/$orgSlug/invoices/createSale'
    | '/org/$orgSlug/invoices/purchases'
    | '/org/$orgSlug/invoices/sales'
    | '/org/$orgSlug/invoices'
  id:
    | '__root__'
    | '/'
    | '/org/$orgSlug'
    | '/org/$orgSlug/invoices'
    | '/org/$orgSlug/customers'
    | '/org/$orgSlug/expenses'
    | '/org/$orgSlug/products'
    | '/org/$orgSlug/transactions'
    | '/org/$orgSlug/users'
    | '/org/$orgSlug/'
    | '/org/$orgSlug/invoices/createPurchase'
    | '/org/$orgSlug/invoices/createSale'
    | '/org/$orgSlug/invoices/purchases'
    | '/org/$orgSlug/invoices/sales'
    | '/org/$orgSlug/invoices/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  OrgOrgSlugRouteRoute: typeof OrgOrgSlugRouteRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/org/$orgSlug': {
      id: '/org/$orgSlug'
      path: '/org/$orgSlug'
      fullPath: '/org/$orgSlug'
      preLoaderRoute: typeof OrgOrgSlugRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/org/$orgSlug/': {
      id: '/org/$orgSlug/'
      path: '/'
      fullPath: '/org/$orgSlug/'
      preLoaderRoute: typeof OrgOrgSlugIndexRouteImport
      parentRoute: typeof OrgOrgSlugRouteRoute
    }
    '/org/$orgSlug/users': {
      id: '/org/$orgSlug/users'
      path: '/users'
      fullPath: '/org/$orgSlug/users'
      preLoaderRoute: typeof OrgOrgSlugUsersRouteImport
      parentRoute: typeof OrgOrgSlugRouteRoute
    }
    '/org/$orgSlug/transactions': {
      id: '/org/$orgSlug/transactions'
      path: '/transactions'
      fullPath: '/org/$orgSlug/transactions'
      preLoaderRoute: typeof OrgOrgSlugTransactionsRouteImport
      parentRoute: typeof OrgOrgSlugRouteRoute
    }
    '/org/$orgSlug/products': {
      id: '/org/$orgSlug/products'
      path: '/products'
      fullPath: '/org/$orgSlug/products'
      preLoaderRoute: typeof OrgOrgSlugProductsRouteImport
      parentRoute: typeof OrgOrgSlugRouteRoute
    }
    '/org/$orgSlug/expenses': {
      id: '/org/$orgSlug/expenses'
      path: '/expenses'
      fullPath: '/org/$orgSlug/expenses'
      preLoaderRoute: typeof OrgOrgSlugExpensesRouteImport
      parentRoute: typeof OrgOrgSlugRouteRoute
    }
    '/org/$orgSlug/customers': {
      id: '/org/$orgSlug/customers'
      path: '/customers'
      fullPath: '/org/$orgSlug/customers'
      preLoaderRoute: typeof OrgOrgSlugCustomersRouteImport
      parentRoute: typeof OrgOrgSlugRouteRoute
    }
    '/org/$orgSlug/invoices': {
      id: '/org/$orgSlug/invoices'
      path: '/invoices'
      fullPath: '/org/$orgSlug/invoices'
      preLoaderRoute: typeof OrgOrgSlugInvoicesRouteRouteImport
      parentRoute: typeof OrgOrgSlugRouteRoute
    }
    '/org/$orgSlug/invoices/': {
      id: '/org/$orgSlug/invoices/'
      path: '/'
      fullPath: '/org/$orgSlug/invoices/'
      preLoaderRoute: typeof OrgOrgSlugInvoicesIndexRouteImport
      parentRoute: typeof OrgOrgSlugInvoicesRouteRoute
    }
    '/org/$orgSlug/invoices/sales': {
      id: '/org/$orgSlug/invoices/sales'
      path: '/sales'
      fullPath: '/org/$orgSlug/invoices/sales'
      preLoaderRoute: typeof OrgOrgSlugInvoicesSalesRouteImport
      parentRoute: typeof OrgOrgSlugInvoicesRouteRoute
    }
    '/org/$orgSlug/invoices/purchases': {
      id: '/org/$orgSlug/invoices/purchases'
      path: '/purchases'
      fullPath: '/org/$orgSlug/invoices/purchases'
      preLoaderRoute: typeof OrgOrgSlugInvoicesPurchasesRouteImport
      parentRoute: typeof OrgOrgSlugInvoicesRouteRoute
    }
    '/org/$orgSlug/invoices/createSale': {
      id: '/org/$orgSlug/invoices/createSale'
      path: '/createSale'
      fullPath: '/org/$orgSlug/invoices/createSale'
      preLoaderRoute: typeof OrgOrgSlugInvoicesCreateSaleRouteImport
      parentRoute: typeof OrgOrgSlugInvoicesRouteRoute
    }
    '/org/$orgSlug/invoices/createPurchase': {
      id: '/org/$orgSlug/invoices/createPurchase'
      path: '/createPurchase'
      fullPath: '/org/$orgSlug/invoices/createPurchase'
      preLoaderRoute: typeof OrgOrgSlugInvoicesCreatePurchaseRouteImport
      parentRoute: typeof OrgOrgSlugInvoicesRouteRoute
    }
  }
}

interface OrgOrgSlugInvoicesRouteRouteChildren {
  OrgOrgSlugInvoicesCreatePurchaseRoute: typeof OrgOrgSlugInvoicesCreatePurchaseRoute
  OrgOrgSlugInvoicesCreateSaleRoute: typeof OrgOrgSlugInvoicesCreateSaleRoute
  OrgOrgSlugInvoicesPurchasesRoute: typeof OrgOrgSlugInvoicesPurchasesRoute
  OrgOrgSlugInvoicesSalesRoute: typeof OrgOrgSlugInvoicesSalesRoute
  OrgOrgSlugInvoicesIndexRoute: typeof OrgOrgSlugInvoicesIndexRoute
}

const OrgOrgSlugInvoicesRouteRouteChildren: OrgOrgSlugInvoicesRouteRouteChildren =
  {
    OrgOrgSlugInvoicesCreatePurchaseRoute:
      OrgOrgSlugInvoicesCreatePurchaseRoute,
    OrgOrgSlugInvoicesCreateSaleRoute: OrgOrgSlugInvoicesCreateSaleRoute,
    OrgOrgSlugInvoicesPurchasesRoute: OrgOrgSlugInvoicesPurchasesRoute,
    OrgOrgSlugInvoicesSalesRoute: OrgOrgSlugInvoicesSalesRoute,
    OrgOrgSlugInvoicesIndexRoute: OrgOrgSlugInvoicesIndexRoute,
  }

const OrgOrgSlugInvoicesRouteRouteWithChildren =
  OrgOrgSlugInvoicesRouteRoute._addFileChildren(
    OrgOrgSlugInvoicesRouteRouteChildren,
  )

interface OrgOrgSlugRouteRouteChildren {
  OrgOrgSlugInvoicesRouteRoute: typeof OrgOrgSlugInvoicesRouteRouteWithChildren
  OrgOrgSlugCustomersRoute: typeof OrgOrgSlugCustomersRoute
  OrgOrgSlugExpensesRoute: typeof OrgOrgSlugExpensesRoute
  OrgOrgSlugProductsRoute: typeof OrgOrgSlugProductsRoute
  OrgOrgSlugTransactionsRoute: typeof OrgOrgSlugTransactionsRoute
  OrgOrgSlugUsersRoute: typeof OrgOrgSlugUsersRoute
  OrgOrgSlugIndexRoute: typeof OrgOrgSlugIndexRoute
}

const OrgOrgSlugRouteRouteChildren: OrgOrgSlugRouteRouteChildren = {
  OrgOrgSlugInvoicesRouteRoute: OrgOrgSlugInvoicesRouteRouteWithChildren,
  OrgOrgSlugCustomersRoute: OrgOrgSlugCustomersRoute,
  OrgOrgSlugExpensesRoute: OrgOrgSlugExpensesRoute,
  OrgOrgSlugProductsRoute: OrgOrgSlugProductsRoute,
  OrgOrgSlugTransactionsRoute: OrgOrgSlugTransactionsRoute,
  OrgOrgSlugUsersRoute: OrgOrgSlugUsersRoute,
  OrgOrgSlugIndexRoute: OrgOrgSlugIndexRoute,
}

const OrgOrgSlugRouteRouteWithChildren = OrgOrgSlugRouteRoute._addFileChildren(
  OrgOrgSlugRouteRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  OrgOrgSlugRouteRoute: OrgOrgSlugRouteRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
