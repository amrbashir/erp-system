/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as OrgsOrgSlugRouteRouteImport } from './routes/orgs.$orgSlug/route'
import { Route as OrgsOrgSlugIndexRouteImport } from './routes/orgs.$orgSlug/index'
import { Route as OrgsOrgSlugUsersRouteRouteImport } from './routes/orgs.$orgSlug/users/route'
import { Route as OrgsOrgSlugOverviewRouteRouteImport } from './routes/orgs.$orgSlug/overview/route'
import { Route as OrgsOrgSlugInvoicesRouteRouteImport } from './routes/orgs.$orgSlug/invoices/route'
import { Route as OrgsOrgSlugCustomersRouteRouteImport } from './routes/orgs.$orgSlug/customers/route'
import { Route as OrgsOrgSlugUsersIndexRouteImport } from './routes/orgs.$orgSlug/users/index'
import { Route as OrgsOrgSlugTransactionsIndexRouteImport } from './routes/orgs.$orgSlug/transactions/index'
import { Route as OrgsOrgSlugProductsIndexRouteImport } from './routes/orgs.$orgSlug/products/index'
import { Route as OrgsOrgSlugInvoicesIndexRouteImport } from './routes/orgs.$orgSlug/invoices/index'
import { Route as OrgsOrgSlugExpensesIndexRouteImport } from './routes/orgs.$orgSlug/expenses/index'
import { Route as OrgsOrgSlugCustomersIndexRouteImport } from './routes/orgs.$orgSlug/customers/index'
import { Route as OrgsOrgSlugInvoicesSalesRouteImport } from './routes/orgs.$orgSlug/invoices/sales'
import { Route as OrgsOrgSlugInvoicesPurchasesRouteImport } from './routes/orgs.$orgSlug/invoices/purchases'
import { Route as OrgsOrgSlugInvoicesCreateSaleRouteImport } from './routes/orgs.$orgSlug/invoices/createSale'
import { Route as OrgsOrgSlugInvoicesCreatePurchaseRouteImport } from './routes/orgs.$orgSlug/invoices/createPurchase'
import { Route as OrgsOrgSlugCustomersIdRouteImport } from './routes/orgs.$orgSlug/customers/$id'

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const OrgsOrgSlugRouteRoute = OrgsOrgSlugRouteRouteImport.update({
  id: '/orgs/$orgSlug',
  path: '/orgs/$orgSlug',
  getParentRoute: () => rootRouteImport,
} as any)
const OrgsOrgSlugIndexRoute = OrgsOrgSlugIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => OrgsOrgSlugRouteRoute,
} as any)
const OrgsOrgSlugUsersRouteRoute = OrgsOrgSlugUsersRouteRouteImport.update({
  id: '/users',
  path: '/users',
  getParentRoute: () => OrgsOrgSlugRouteRoute,
} as any)
const OrgsOrgSlugOverviewRouteRoute =
  OrgsOrgSlugOverviewRouteRouteImport.update({
    id: '/overview',
    path: '/overview',
    getParentRoute: () => OrgsOrgSlugRouteRoute,
  } as any)
const OrgsOrgSlugInvoicesRouteRoute =
  OrgsOrgSlugInvoicesRouteRouteImport.update({
    id: '/invoices',
    path: '/invoices',
    getParentRoute: () => OrgsOrgSlugRouteRoute,
  } as any)
const OrgsOrgSlugCustomersRouteRoute =
  OrgsOrgSlugCustomersRouteRouteImport.update({
    id: '/customers',
    path: '/customers',
    getParentRoute: () => OrgsOrgSlugRouteRoute,
  } as any)
const OrgsOrgSlugUsersIndexRoute = OrgsOrgSlugUsersIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => OrgsOrgSlugUsersRouteRoute,
} as any)
const OrgsOrgSlugTransactionsIndexRoute =
  OrgsOrgSlugTransactionsIndexRouteImport.update({
    id: '/transactions/',
    path: '/transactions/',
    getParentRoute: () => OrgsOrgSlugRouteRoute,
  } as any)
const OrgsOrgSlugProductsIndexRoute =
  OrgsOrgSlugProductsIndexRouteImport.update({
    id: '/products/',
    path: '/products/',
    getParentRoute: () => OrgsOrgSlugRouteRoute,
  } as any)
const OrgsOrgSlugInvoicesIndexRoute =
  OrgsOrgSlugInvoicesIndexRouteImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => OrgsOrgSlugInvoicesRouteRoute,
  } as any)
const OrgsOrgSlugExpensesIndexRoute =
  OrgsOrgSlugExpensesIndexRouteImport.update({
    id: '/expenses/',
    path: '/expenses/',
    getParentRoute: () => OrgsOrgSlugRouteRoute,
  } as any)
const OrgsOrgSlugCustomersIndexRoute =
  OrgsOrgSlugCustomersIndexRouteImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => OrgsOrgSlugCustomersRouteRoute,
  } as any)
const OrgsOrgSlugInvoicesSalesRoute =
  OrgsOrgSlugInvoicesSalesRouteImport.update({
    id: '/sales',
    path: '/sales',
    getParentRoute: () => OrgsOrgSlugInvoicesRouteRoute,
  } as any)
const OrgsOrgSlugInvoicesPurchasesRoute =
  OrgsOrgSlugInvoicesPurchasesRouteImport.update({
    id: '/purchases',
    path: '/purchases',
    getParentRoute: () => OrgsOrgSlugInvoicesRouteRoute,
  } as any)
const OrgsOrgSlugInvoicesCreateSaleRoute =
  OrgsOrgSlugInvoicesCreateSaleRouteImport.update({
    id: '/createSale',
    path: '/createSale',
    getParentRoute: () => OrgsOrgSlugInvoicesRouteRoute,
  } as any)
const OrgsOrgSlugInvoicesCreatePurchaseRoute =
  OrgsOrgSlugInvoicesCreatePurchaseRouteImport.update({
    id: '/createPurchase',
    path: '/createPurchase',
    getParentRoute: () => OrgsOrgSlugInvoicesRouteRoute,
  } as any)
const OrgsOrgSlugCustomersIdRoute = OrgsOrgSlugCustomersIdRouteImport.update({
  id: '/$id',
  path: '/$id',
  getParentRoute: () => OrgsOrgSlugCustomersRouteRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/orgs/$orgSlug': typeof OrgsOrgSlugRouteRouteWithChildren
  '/orgs/$orgSlug/customers': typeof OrgsOrgSlugCustomersRouteRouteWithChildren
  '/orgs/$orgSlug/invoices': typeof OrgsOrgSlugInvoicesRouteRouteWithChildren
  '/orgs/$orgSlug/overview': typeof OrgsOrgSlugOverviewRouteRoute
  '/orgs/$orgSlug/users': typeof OrgsOrgSlugUsersRouteRouteWithChildren
  '/orgs/$orgSlug/': typeof OrgsOrgSlugIndexRoute
  '/orgs/$orgSlug/customers/$id': typeof OrgsOrgSlugCustomersIdRoute
  '/orgs/$orgSlug/invoices/createPurchase': typeof OrgsOrgSlugInvoicesCreatePurchaseRoute
  '/orgs/$orgSlug/invoices/createSale': typeof OrgsOrgSlugInvoicesCreateSaleRoute
  '/orgs/$orgSlug/invoices/purchases': typeof OrgsOrgSlugInvoicesPurchasesRoute
  '/orgs/$orgSlug/invoices/sales': typeof OrgsOrgSlugInvoicesSalesRoute
  '/orgs/$orgSlug/customers/': typeof OrgsOrgSlugCustomersIndexRoute
  '/orgs/$orgSlug/expenses': typeof OrgsOrgSlugExpensesIndexRoute
  '/orgs/$orgSlug/invoices/': typeof OrgsOrgSlugInvoicesIndexRoute
  '/orgs/$orgSlug/products': typeof OrgsOrgSlugProductsIndexRoute
  '/orgs/$orgSlug/transactions': typeof OrgsOrgSlugTransactionsIndexRoute
  '/orgs/$orgSlug/users/': typeof OrgsOrgSlugUsersIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/orgs/$orgSlug/overview': typeof OrgsOrgSlugOverviewRouteRoute
  '/orgs/$orgSlug': typeof OrgsOrgSlugIndexRoute
  '/orgs/$orgSlug/customers/$id': typeof OrgsOrgSlugCustomersIdRoute
  '/orgs/$orgSlug/invoices/createPurchase': typeof OrgsOrgSlugInvoicesCreatePurchaseRoute
  '/orgs/$orgSlug/invoices/createSale': typeof OrgsOrgSlugInvoicesCreateSaleRoute
  '/orgs/$orgSlug/invoices/purchases': typeof OrgsOrgSlugInvoicesPurchasesRoute
  '/orgs/$orgSlug/invoices/sales': typeof OrgsOrgSlugInvoicesSalesRoute
  '/orgs/$orgSlug/customers': typeof OrgsOrgSlugCustomersIndexRoute
  '/orgs/$orgSlug/expenses': typeof OrgsOrgSlugExpensesIndexRoute
  '/orgs/$orgSlug/invoices': typeof OrgsOrgSlugInvoicesIndexRoute
  '/orgs/$orgSlug/products': typeof OrgsOrgSlugProductsIndexRoute
  '/orgs/$orgSlug/transactions': typeof OrgsOrgSlugTransactionsIndexRoute
  '/orgs/$orgSlug/users': typeof OrgsOrgSlugUsersIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/orgs/$orgSlug': typeof OrgsOrgSlugRouteRouteWithChildren
  '/orgs/$orgSlug/customers': typeof OrgsOrgSlugCustomersRouteRouteWithChildren
  '/orgs/$orgSlug/invoices': typeof OrgsOrgSlugInvoicesRouteRouteWithChildren
  '/orgs/$orgSlug/overview': typeof OrgsOrgSlugOverviewRouteRoute
  '/orgs/$orgSlug/users': typeof OrgsOrgSlugUsersRouteRouteWithChildren
  '/orgs/$orgSlug/': typeof OrgsOrgSlugIndexRoute
  '/orgs/$orgSlug/customers/$id': typeof OrgsOrgSlugCustomersIdRoute
  '/orgs/$orgSlug/invoices/createPurchase': typeof OrgsOrgSlugInvoicesCreatePurchaseRoute
  '/orgs/$orgSlug/invoices/createSale': typeof OrgsOrgSlugInvoicesCreateSaleRoute
  '/orgs/$orgSlug/invoices/purchases': typeof OrgsOrgSlugInvoicesPurchasesRoute
  '/orgs/$orgSlug/invoices/sales': typeof OrgsOrgSlugInvoicesSalesRoute
  '/orgs/$orgSlug/customers/': typeof OrgsOrgSlugCustomersIndexRoute
  '/orgs/$orgSlug/expenses/': typeof OrgsOrgSlugExpensesIndexRoute
  '/orgs/$orgSlug/invoices/': typeof OrgsOrgSlugInvoicesIndexRoute
  '/orgs/$orgSlug/products/': typeof OrgsOrgSlugProductsIndexRoute
  '/orgs/$orgSlug/transactions/': typeof OrgsOrgSlugTransactionsIndexRoute
  '/orgs/$orgSlug/users/': typeof OrgsOrgSlugUsersIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/orgs/$orgSlug'
    | '/orgs/$orgSlug/customers'
    | '/orgs/$orgSlug/invoices'
    | '/orgs/$orgSlug/overview'
    | '/orgs/$orgSlug/users'
    | '/orgs/$orgSlug/'
    | '/orgs/$orgSlug/customers/$id'
    | '/orgs/$orgSlug/invoices/createPurchase'
    | '/orgs/$orgSlug/invoices/createSale'
    | '/orgs/$orgSlug/invoices/purchases'
    | '/orgs/$orgSlug/invoices/sales'
    | '/orgs/$orgSlug/customers/'
    | '/orgs/$orgSlug/expenses'
    | '/orgs/$orgSlug/invoices/'
    | '/orgs/$orgSlug/products'
    | '/orgs/$orgSlug/transactions'
    | '/orgs/$orgSlug/users/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/orgs/$orgSlug/overview'
    | '/orgs/$orgSlug'
    | '/orgs/$orgSlug/customers/$id'
    | '/orgs/$orgSlug/invoices/createPurchase'
    | '/orgs/$orgSlug/invoices/createSale'
    | '/orgs/$orgSlug/invoices/purchases'
    | '/orgs/$orgSlug/invoices/sales'
    | '/orgs/$orgSlug/customers'
    | '/orgs/$orgSlug/expenses'
    | '/orgs/$orgSlug/invoices'
    | '/orgs/$orgSlug/products'
    | '/orgs/$orgSlug/transactions'
    | '/orgs/$orgSlug/users'
  id:
    | '__root__'
    | '/'
    | '/orgs/$orgSlug'
    | '/orgs/$orgSlug/customers'
    | '/orgs/$orgSlug/invoices'
    | '/orgs/$orgSlug/overview'
    | '/orgs/$orgSlug/users'
    | '/orgs/$orgSlug/'
    | '/orgs/$orgSlug/customers/$id'
    | '/orgs/$orgSlug/invoices/createPurchase'
    | '/orgs/$orgSlug/invoices/createSale'
    | '/orgs/$orgSlug/invoices/purchases'
    | '/orgs/$orgSlug/invoices/sales'
    | '/orgs/$orgSlug/customers/'
    | '/orgs/$orgSlug/expenses/'
    | '/orgs/$orgSlug/invoices/'
    | '/orgs/$orgSlug/products/'
    | '/orgs/$orgSlug/transactions/'
    | '/orgs/$orgSlug/users/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  OrgsOrgSlugRouteRoute: typeof OrgsOrgSlugRouteRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/orgs/$orgSlug': {
      id: '/orgs/$orgSlug'
      path: '/orgs/$orgSlug'
      fullPath: '/orgs/$orgSlug'
      preLoaderRoute: typeof OrgsOrgSlugRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/orgs/$orgSlug/': {
      id: '/orgs/$orgSlug/'
      path: '/'
      fullPath: '/orgs/$orgSlug/'
      preLoaderRoute: typeof OrgsOrgSlugIndexRouteImport
      parentRoute: typeof OrgsOrgSlugRouteRoute
    }
    '/orgs/$orgSlug/users': {
      id: '/orgs/$orgSlug/users'
      path: '/users'
      fullPath: '/orgs/$orgSlug/users'
      preLoaderRoute: typeof OrgsOrgSlugUsersRouteRouteImport
      parentRoute: typeof OrgsOrgSlugRouteRoute
    }
    '/orgs/$orgSlug/overview': {
      id: '/orgs/$orgSlug/overview'
      path: '/overview'
      fullPath: '/orgs/$orgSlug/overview'
      preLoaderRoute: typeof OrgsOrgSlugOverviewRouteRouteImport
      parentRoute: typeof OrgsOrgSlugRouteRoute
    }
    '/orgs/$orgSlug/invoices': {
      id: '/orgs/$orgSlug/invoices'
      path: '/invoices'
      fullPath: '/orgs/$orgSlug/invoices'
      preLoaderRoute: typeof OrgsOrgSlugInvoicesRouteRouteImport
      parentRoute: typeof OrgsOrgSlugRouteRoute
    }
    '/orgs/$orgSlug/customers': {
      id: '/orgs/$orgSlug/customers'
      path: '/customers'
      fullPath: '/orgs/$orgSlug/customers'
      preLoaderRoute: typeof OrgsOrgSlugCustomersRouteRouteImport
      parentRoute: typeof OrgsOrgSlugRouteRoute
    }
    '/orgs/$orgSlug/users/': {
      id: '/orgs/$orgSlug/users/'
      path: '/'
      fullPath: '/orgs/$orgSlug/users/'
      preLoaderRoute: typeof OrgsOrgSlugUsersIndexRouteImport
      parentRoute: typeof OrgsOrgSlugUsersRouteRoute
    }
    '/orgs/$orgSlug/transactions/': {
      id: '/orgs/$orgSlug/transactions/'
      path: '/transactions'
      fullPath: '/orgs/$orgSlug/transactions'
      preLoaderRoute: typeof OrgsOrgSlugTransactionsIndexRouteImport
      parentRoute: typeof OrgsOrgSlugRouteRoute
    }
    '/orgs/$orgSlug/products/': {
      id: '/orgs/$orgSlug/products/'
      path: '/products'
      fullPath: '/orgs/$orgSlug/products'
      preLoaderRoute: typeof OrgsOrgSlugProductsIndexRouteImport
      parentRoute: typeof OrgsOrgSlugRouteRoute
    }
    '/orgs/$orgSlug/invoices/': {
      id: '/orgs/$orgSlug/invoices/'
      path: '/'
      fullPath: '/orgs/$orgSlug/invoices/'
      preLoaderRoute: typeof OrgsOrgSlugInvoicesIndexRouteImport
      parentRoute: typeof OrgsOrgSlugInvoicesRouteRoute
    }
    '/orgs/$orgSlug/expenses/': {
      id: '/orgs/$orgSlug/expenses/'
      path: '/expenses'
      fullPath: '/orgs/$orgSlug/expenses'
      preLoaderRoute: typeof OrgsOrgSlugExpensesIndexRouteImport
      parentRoute: typeof OrgsOrgSlugRouteRoute
    }
    '/orgs/$orgSlug/customers/': {
      id: '/orgs/$orgSlug/customers/'
      path: '/'
      fullPath: '/orgs/$orgSlug/customers/'
      preLoaderRoute: typeof OrgsOrgSlugCustomersIndexRouteImport
      parentRoute: typeof OrgsOrgSlugCustomersRouteRoute
    }
    '/orgs/$orgSlug/invoices/sales': {
      id: '/orgs/$orgSlug/invoices/sales'
      path: '/sales'
      fullPath: '/orgs/$orgSlug/invoices/sales'
      preLoaderRoute: typeof OrgsOrgSlugInvoicesSalesRouteImport
      parentRoute: typeof OrgsOrgSlugInvoicesRouteRoute
    }
    '/orgs/$orgSlug/invoices/purchases': {
      id: '/orgs/$orgSlug/invoices/purchases'
      path: '/purchases'
      fullPath: '/orgs/$orgSlug/invoices/purchases'
      preLoaderRoute: typeof OrgsOrgSlugInvoicesPurchasesRouteImport
      parentRoute: typeof OrgsOrgSlugInvoicesRouteRoute
    }
    '/orgs/$orgSlug/invoices/createSale': {
      id: '/orgs/$orgSlug/invoices/createSale'
      path: '/createSale'
      fullPath: '/orgs/$orgSlug/invoices/createSale'
      preLoaderRoute: typeof OrgsOrgSlugInvoicesCreateSaleRouteImport
      parentRoute: typeof OrgsOrgSlugInvoicesRouteRoute
    }
    '/orgs/$orgSlug/invoices/createPurchase': {
      id: '/orgs/$orgSlug/invoices/createPurchase'
      path: '/createPurchase'
      fullPath: '/orgs/$orgSlug/invoices/createPurchase'
      preLoaderRoute: typeof OrgsOrgSlugInvoicesCreatePurchaseRouteImport
      parentRoute: typeof OrgsOrgSlugInvoicesRouteRoute
    }
    '/orgs/$orgSlug/customers/$id': {
      id: '/orgs/$orgSlug/customers/$id'
      path: '/$id'
      fullPath: '/orgs/$orgSlug/customers/$id'
      preLoaderRoute: typeof OrgsOrgSlugCustomersIdRouteImport
      parentRoute: typeof OrgsOrgSlugCustomersRouteRoute
    }
  }
}

interface OrgsOrgSlugCustomersRouteRouteChildren {
  OrgsOrgSlugCustomersIdRoute: typeof OrgsOrgSlugCustomersIdRoute
  OrgsOrgSlugCustomersIndexRoute: typeof OrgsOrgSlugCustomersIndexRoute
}

const OrgsOrgSlugCustomersRouteRouteChildren: OrgsOrgSlugCustomersRouteRouteChildren =
  {
    OrgsOrgSlugCustomersIdRoute: OrgsOrgSlugCustomersIdRoute,
    OrgsOrgSlugCustomersIndexRoute: OrgsOrgSlugCustomersIndexRoute,
  }

const OrgsOrgSlugCustomersRouteRouteWithChildren =
  OrgsOrgSlugCustomersRouteRoute._addFileChildren(
    OrgsOrgSlugCustomersRouteRouteChildren,
  )

interface OrgsOrgSlugInvoicesRouteRouteChildren {
  OrgsOrgSlugInvoicesCreatePurchaseRoute: typeof OrgsOrgSlugInvoicesCreatePurchaseRoute
  OrgsOrgSlugInvoicesCreateSaleRoute: typeof OrgsOrgSlugInvoicesCreateSaleRoute
  OrgsOrgSlugInvoicesPurchasesRoute: typeof OrgsOrgSlugInvoicesPurchasesRoute
  OrgsOrgSlugInvoicesSalesRoute: typeof OrgsOrgSlugInvoicesSalesRoute
  OrgsOrgSlugInvoicesIndexRoute: typeof OrgsOrgSlugInvoicesIndexRoute
}

const OrgsOrgSlugInvoicesRouteRouteChildren: OrgsOrgSlugInvoicesRouteRouteChildren =
  {
    OrgsOrgSlugInvoicesCreatePurchaseRoute:
      OrgsOrgSlugInvoicesCreatePurchaseRoute,
    OrgsOrgSlugInvoicesCreateSaleRoute: OrgsOrgSlugInvoicesCreateSaleRoute,
    OrgsOrgSlugInvoicesPurchasesRoute: OrgsOrgSlugInvoicesPurchasesRoute,
    OrgsOrgSlugInvoicesSalesRoute: OrgsOrgSlugInvoicesSalesRoute,
    OrgsOrgSlugInvoicesIndexRoute: OrgsOrgSlugInvoicesIndexRoute,
  }

const OrgsOrgSlugInvoicesRouteRouteWithChildren =
  OrgsOrgSlugInvoicesRouteRoute._addFileChildren(
    OrgsOrgSlugInvoicesRouteRouteChildren,
  )

interface OrgsOrgSlugUsersRouteRouteChildren {
  OrgsOrgSlugUsersIndexRoute: typeof OrgsOrgSlugUsersIndexRoute
}

const OrgsOrgSlugUsersRouteRouteChildren: OrgsOrgSlugUsersRouteRouteChildren = {
  OrgsOrgSlugUsersIndexRoute: OrgsOrgSlugUsersIndexRoute,
}

const OrgsOrgSlugUsersRouteRouteWithChildren =
  OrgsOrgSlugUsersRouteRoute._addFileChildren(
    OrgsOrgSlugUsersRouteRouteChildren,
  )

interface OrgsOrgSlugRouteRouteChildren {
  OrgsOrgSlugCustomersRouteRoute: typeof OrgsOrgSlugCustomersRouteRouteWithChildren
  OrgsOrgSlugInvoicesRouteRoute: typeof OrgsOrgSlugInvoicesRouteRouteWithChildren
  OrgsOrgSlugOverviewRouteRoute: typeof OrgsOrgSlugOverviewRouteRoute
  OrgsOrgSlugUsersRouteRoute: typeof OrgsOrgSlugUsersRouteRouteWithChildren
  OrgsOrgSlugIndexRoute: typeof OrgsOrgSlugIndexRoute
  OrgsOrgSlugExpensesIndexRoute: typeof OrgsOrgSlugExpensesIndexRoute
  OrgsOrgSlugProductsIndexRoute: typeof OrgsOrgSlugProductsIndexRoute
  OrgsOrgSlugTransactionsIndexRoute: typeof OrgsOrgSlugTransactionsIndexRoute
}

const OrgsOrgSlugRouteRouteChildren: OrgsOrgSlugRouteRouteChildren = {
  OrgsOrgSlugCustomersRouteRoute: OrgsOrgSlugCustomersRouteRouteWithChildren,
  OrgsOrgSlugInvoicesRouteRoute: OrgsOrgSlugInvoicesRouteRouteWithChildren,
  OrgsOrgSlugOverviewRouteRoute: OrgsOrgSlugOverviewRouteRoute,
  OrgsOrgSlugUsersRouteRoute: OrgsOrgSlugUsersRouteRouteWithChildren,
  OrgsOrgSlugIndexRoute: OrgsOrgSlugIndexRoute,
  OrgsOrgSlugExpensesIndexRoute: OrgsOrgSlugExpensesIndexRoute,
  OrgsOrgSlugProductsIndexRoute: OrgsOrgSlugProductsIndexRoute,
  OrgsOrgSlugTransactionsIndexRoute: OrgsOrgSlugTransactionsIndexRoute,
}

const OrgsOrgSlugRouteRouteWithChildren =
  OrgsOrgSlugRouteRoute._addFileChildren(OrgsOrgSlugRouteRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  OrgsOrgSlugRouteRoute: OrgsOrgSlugRouteRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
